/* Minify: at least one missing file. See http://code.google.com/p/minify/wiki/Debugging */

;(function(){var container,button,menu,links,subMenus,i,len;container=document.getElementById('site-navigation');if(!container){return;}
button=container.getElementsByTagName('button')[0];if('undefined'===typeof button){return;}
menu=container.getElementsByTagName('ul')[0];if('undefined'===typeof menu){button.style.display='none';return;}
menu.setAttribute('aria-expanded','false');if(-1===menu.className.indexOf('nav-menu')){menu.className+=' nav-menu';}
button.onclick=function(){if(-1!==container.className.indexOf('toggled')){container.className=container.className.replace(' toggled','');button.setAttribute('aria-expanded','false');menu.setAttribute('aria-expanded','false');}else{container.className+=' toggled';button.setAttribute('aria-expanded','true');menu.setAttribute('aria-expanded','true');}};links=menu.getElementsByTagName('a');subMenus=menu.getElementsByTagName('ul');for(i=0,len=subMenus.length;i<len;i++){subMenus[i].parentNode.setAttribute('aria-haspopup','true');}
for(i=0,len=links.length;i<len;i++){links[i].addEventListener('focus',toggleFocus,true);links[i].addEventListener('blur',toggleFocus,true);}
function toggleFocus(){var self=this;while(-1===self.className.indexOf('nav-menu')){if('li'===self.tagName.toLowerCase()){if(-1!==self.className.indexOf('focus')){self.className=self.className.replace(' focus','');}else{self.className+=' focus';}}
self=self.parentElement;}}
(function(container){var touchStartFn,i,parentLink=container.querySelectorAll('.menu-item-has-children > a, .page_item_has_children > a');if('ontouchstart'in window){touchStartFn=function(e){var menuItem=this.parentNode,i;if(!menuItem.classList.contains('focus')){e.preventDefault();for(i=0;i<menuItem.parentNode.children.length;++i){if(menuItem===menuItem.parentNode.children[i]){continue;}
menuItem.parentNode.children[i].classList.remove('focus');}
menuItem.classList.add('focus');}else{menuItem.classList.remove('focus');}};for(i=0;i<parentLink.length;++i){parentLink[i].addEventListener('touchstart',touchStartFn,false);}}}(container));})();;(function($){$.fn.dragScroll=function(options){$(this).scrollLeft(200);var x,left;var $scrollArea=$(this);$($scrollArea).attr("onselectstart","return false;");$($scrollArea).mousedown(function(e){e.preventDefault();timeline=true;x=e.pageX;left=$(this).scrollLeft();});$("#drag").mousemove(function(e){if(timeline){var newX=e.pageX;$($scrollArea).scrollLeft(left-newX+x);}});$("#drag").mouseup(function(e){timeline=false;});};})(jQuery);$(document).ready(function(){$('#drag').dragScroll({});});;$(function(){$('.button-checkbox').each(function(){var $widget=$(this),$button=$widget.find('button'),$checkbox=$widget.find('input:checkbox'),color=$button.data('color'),settings={on:{icon:'glyphicon glyphicon-check'},off:{icon:'glyphicon glyphicon-unchecked'}};$button.on('click',function(){$checkbox.prop('checked',!$checkbox.is(':checked'));$checkbox.triggerHandler('change');updateDisplay();});$checkbox.on('change',function(){updateDisplay();});function updateDisplay(){var isChecked=$checkbox.is(':checked');$button.data('state',(isChecked)?"on":"off");$button.find('.state-icon').removeClass().addClass('state-icon '+settings[$button.data('state')].icon);if(isChecked){$button.removeClass('btn-default').addClass('btn-'+color+' active');}
else{$button.removeClass('btn-'+color+' active').addClass('btn-default');}}
function init(){updateDisplay();if($button.find('.state-icon').length==0){$button.prepend('<i class="state-icon '+settings[$button.data('state')].icon+'"></i>');}}
init();});});;$(document).ready(function(){$('.carousel').carousel({interval:6000})});$('.carousel-linked-nav > li > a').click(function(){var item=Number($(this).attr('href').substring(1));$('#vod').carousel(item-1);$('.carousel-linked-nav .active').removeClass('active');$(this).parent().addClass('active');return false;});$('#vod').bind('slid',function(){$('.carousel-linked-nav .active').removeClass('active');var idx=$('#vod .active.item').index();$('.carousel-linked-nav li:eq('+idx+')').addClass('active');});;+function($){'use strict';function getValue($el){return $el.is('[type="checkbox"]')?$el.prop('checked'):$el.is('[type="radio"]')?!!$('[name="'+$el.attr('name')+'"]:checked').length:$.trim($el.val())}
var Validator=function(element,options){this.options=options
this.$element=$(element)
this.$inputs=this.$element.find(Validator.INPUT_SELECTOR)
this.$btn=$('button[type="submit"], input[type="submit"]').filter('[form="'+this.$element.attr('id')+'"]').add(this.$element.find('input[type="submit"], button[type="submit"]'))
options.errors=$.extend({},Validator.DEFAULTS.errors,options.errors)
for(var custom in options.custom){if(!options.errors[custom])throw new Error('Missing default error message for custom validator: '+custom)}
$.extend(Validator.VALIDATORS,options.custom)
this.$element.attr('novalidate',true)
this.toggleSubmit()
this.$element.on('input.bs.validator change.bs.validator focusout.bs.validator',Validator.INPUT_SELECTOR,$.proxy(this.onInput,this))
this.$element.on('submit.bs.validator',$.proxy(this.onSubmit,this))
this.$element.find('[data-match]').each(function(){var $this=$(this)
var target=$this.data('match')
$(target).on('input.bs.validator',function(e){getValue($this)&&$this.trigger('input.bs.validator')})})}
Validator.INPUT_SELECTOR=':input:not([type="submit"], button):enabled:visible'
Validator.FOCUS_OFFSET=20
Validator.DEFAULTS={delay:500,html:false,disable:true,focus:true,custom:{},errors:{match:'Does not match',minlength:'Not long enough'},feedback:{success:'glyphicon-ok',error:'glyphicon-remove'}}
Validator.VALIDATORS={'native':function($el){var el=$el[0]
return el.checkValidity?el.checkValidity():true},'match':function($el){var target=$el.data('match')
return!$el.val()||$el.val()===$(target).val()},'minlength':function($el){var minlength=$el.data('minlength')
return!$el.val()||$el.val().length>=minlength}}
Validator.prototype.onInput=function(e){var self=this
var $el=$(e.target)
var deferErrors=e.type!=='focusout'
this.validateInput($el,deferErrors).done(function(){self.toggleSubmit()})}
Validator.prototype.validateInput=function($el,deferErrors){var value=getValue($el)
var prevValue=$el.data('bs.validator.previous')
var prevErrors=$el.data('bs.validator.errors')
var errors
if(prevValue===value)return $.Deferred().resolve()
else $el.data('bs.validator.previous',value)
if($el.is('[type="radio"]'))$el=this.$element.find('input[name="'+$el.attr('name')+'"]')
var e=$.Event('validate.bs.validator',{relatedTarget:$el[0]})
this.$element.trigger(e)
if(e.isDefaultPrevented())return
var self=this
return this.runValidators($el).done(function(errors){$el.data('bs.validator.errors',errors)
errors.length?deferErrors?self.defer($el,self.showErrors):self.showErrors($el):self.clearErrors($el)
if(!prevErrors||errors.toString()!==prevErrors.toString()){e=errors.length?$.Event('invalid.bs.validator',{relatedTarget:$el[0],detail:errors}):$.Event('valid.bs.validator',{relatedTarget:$el[0],detail:prevErrors})
self.$element.trigger(e)}
self.toggleSubmit()
self.$element.trigger($.Event('validated.bs.validator',{relatedTarget:$el[0]}))})}
Validator.prototype.runValidators=function($el){var errors=[]
var deferred=$.Deferred()
var options=this.options
$el.data('bs.validator.deferred')&&$el.data('bs.validator.deferred').reject()
$el.data('bs.validator.deferred',deferred)
function getErrorMessage(key){return $el.data(key+'-error')||$el.data('error')||key=='native'&&$el[0].validationMessage||options.errors[key]}
$.each(Validator.VALIDATORS,$.proxy(function(key,validator){if((getValue($el)||$el.attr('required'))&&($el.data(key)||key=='native')&&!validator.call(this,$el)){var error=getErrorMessage(key)
!~errors.indexOf(error)&&errors.push(error)}},this))
if(!errors.length&&getValue($el)&&$el.data('remote')){this.defer($el,function(){var data={}
data[$el.attr('name')]=getValue($el)
$.get($el.data('remote'),data).fail(function(jqXHR,textStatus,error){errors.push(getErrorMessage('remote')||error)}).always(function(){deferred.resolve(errors)})})}else deferred.resolve(errors)
return deferred.promise()}
Validator.prototype.validate=function(){var self=this
$.when(this.$inputs.map(function(el){return self.validateInput($(this),false)})).then(function(){self.toggleSubmit()
self.focusError()})
return this}
Validator.prototype.focusError=function(){if(!this.options.focus)return
var $input=$(".has-error:first :input")
if($input.length===0)return
$(document.body).animate({scrollTop:$input.offset().top-Validator.FOCUS_OFFSET},250)
$input.focus()}
Validator.prototype.showErrors=function($el){var method=this.options.html?'html':'text'
var errors=$el.data('bs.validator.errors')
var $group=$el.closest('.form-group')
var $block=$group.find('.help-block.with-errors')
var $feedback=$group.find('.form-control-feedback')
if(!errors.length)return
errors=$('<ul/>').addClass('list-unstyled').append($.map(errors,function(error){return $('<li/>')[method](error)}))
$block.data('bs.validator.originalContent')===undefined&&$block.data('bs.validator.originalContent',$block.html())
$block.empty().append(errors)
$group.addClass('has-error has-danger')
$group.hasClass('has-feedback')&&$feedback.removeClass(this.options.feedback.success)&&$feedback.addClass(this.options.feedback.error)&&$group.removeClass('has-success')}
Validator.prototype.clearErrors=function($el){var $group=$el.closest('.form-group')
var $block=$group.find('.help-block.with-errors')
var $feedback=$group.find('.form-control-feedback')
$block.html($block.data('bs.validator.originalContent'))
$group.removeClass('has-error has-danger')
$group.hasClass('has-feedback')&&$feedback.removeClass(this.options.feedback.error)&&getValue($el)&&$feedback.addClass(this.options.feedback.success)&&$group.addClass('has-success')}
Validator.prototype.hasErrors=function(){function fieldErrors(){return!!($(this).data('bs.validator.errors')||[]).length}
return!!this.$inputs.filter(fieldErrors).length}
Validator.prototype.isIncomplete=function(){function fieldIncomplete(){return!getValue($(this))}
return!!this.$inputs.filter('[required]').filter(fieldIncomplete).length}
Validator.prototype.onSubmit=function(e){this.validate()
if(this.isIncomplete()||this.hasErrors())e.preventDefault()}
Validator.prototype.toggleSubmit=function(){if(!this.options.disable)return
this.$btn.toggleClass('disabled',this.isIncomplete()||this.hasErrors())}
Validator.prototype.defer=function($el,callback){callback=$.proxy(callback,this,$el)
if(!this.options.delay)return callback()
window.clearTimeout($el.data('bs.validator.timeout'))
$el.data('bs.validator.timeout',window.setTimeout(callback,this.options.delay))}
Validator.prototype.destroy=function(){this.$element.removeAttr('novalidate').removeData('bs.validator').off('.bs.validator').find('.form-control-feedback').removeClass([this.options.feedback.error,this.options.feedback.success].join(' '))
this.$inputs.off('.bs.validator').removeData(['bs.validator.errors','bs.validator.deferred','bs.validator.previous']).each(function(){var $this=$(this)
var timeout=$this.data('bs.validator.timeout')
window.clearTimeout(timeout)&&$this.removeData('bs.validator.timeout')})
this.$element.find('.help-block.with-errors').each(function(){var $this=$(this)
var originalContent=$this.data('bs.validator.originalContent')
$this.removeData('bs.validator.originalContent').html(originalContent)})
this.$element.find('input[type="submit"], button[type="submit"]').removeClass('disabled')
this.$element.find('.has-error, .has-danger').removeClass('has-error has-danger')
return this}
function Plugin(option){return this.each(function(){var $this=$(this)
var options=$.extend({},Validator.DEFAULTS,$this.data(),typeof option=='object'&&option)
var data=$this.data('bs.validator')
if(!data&&option=='destroy')return
if(!data)$this.data('bs.validator',(data=new Validator(this,options)))
if(typeof option=='string')data[option]()})}
var old=$.fn.validator
$.fn.validator=Plugin
$.fn.validator.Constructor=Validator
$.fn.validator.noConflict=function(){$.fn.validator=old
return this}
$(window).on('load',function(){$('form[data-toggle="validator"]').each(function(){var $form=$(this)
Plugin.call($form,$form.data())})})}(jQuery);;!function($){"use strict";var Carousel=function(element,options){this.$element=$(element)
this.options=options
this.options.slide&&this.slide(this.options.slide)
this.options.pause=='hover'&&this.$element.on('mouseenter',$.proxy(this.pause,this)).on('mouseleave',$.proxy(this.cycle,this))}
Carousel.prototype={cycle:function(e){if(!e)this.paused=false
this.options.interval&&!this.paused&&(this.interval=setInterval($.proxy(this.next,this),this.options.interval))
return this},to:function(pos){var $active=this.$element.find('.active'),children=$active.parent().children(),activePos=children.index($active),that=this
if(pos>(children.length-1)||pos<0)return
if(this.sliding){return this.$element.one('slid',function(){that.to(pos)})}
if(activePos==pos){return this.pause().cycle()}
return this.slide(pos>activePos?'next':'prev',$(children[pos]))},pause:function(e){if(!e)this.paused=true
clearInterval(this.interval)
this.interval=null
return this},next:function(){if(this.sliding)return
return this.slide('next')},prev:function(){if(this.sliding)return
return this.slide('prev')},slide:function(type,next){var $active=this.$element.find('.active'),$next=next||$active[type](),isCycling=this.interval,direction=type=='next'?'left':'right',fallback=type=='next'?'first':'last',that=this,e=$.Event('slide')
this.sliding=true
isCycling&&this.pause()
$next=$next.length?$next:this.$element.find('.item')[fallback]()
if($next.hasClass('active'))return
if($.support.transition&&this.$element.hasClass('slide')){this.$element.trigger(e)
if(e.isDefaultPrevented())return
$next.addClass(type)
$next[0].offsetWidth
$active.addClass(direction)
$next.addClass(direction)
this.$element.one($.support.transition.end,function(){$next.removeClass([type,direction].join(' ')).addClass('active')
$active.removeClass(['active',direction].join(' '))
that.sliding=false
setTimeout(function(){that.$element.trigger('slid')},0)})}else{this.$element.trigger(e)
if(e.isDefaultPrevented())return
$active.removeClass('active')
$next.addClass('active')
this.sliding=false
this.$element.trigger('slid')}
isCycling&&this.cycle()
return this}}
$.fn.carousel=function(option){return this.each(function(){var $this=$(this),data=$this.data('carousel'),options=$.extend({},$.fn.carousel.defaults,typeof option=='object'&&option)
if(!data)$this.data('carousel',(data=new Carousel(this,options)))
if(typeof option=='number')data.to(option)
else if(typeof option=='string'||(option=options.slide))data[option]()
else if(options.interval)data.cycle()})}
$.fn.carousel.defaults={interval:5000,pause:'hover'}
$.fn.carousel.Constructor=Carousel
$(function(){$('body').on('click.carousel.data-api','[data-slide]',function(e){var $this=$(this),href,$target=$($this.attr('data-target')||(href=$this.attr('href'))&&href.replace(/.*(?=#[^\s]+$)/,'')),options=!$target.data('modal')&&$.extend({},$target.data(),$this.data())
$target.carousel(options)
e.preventDefault()})})}(window.jQuery);;(function(){var isWebkit=navigator.userAgent.toLowerCase().indexOf('webkit')>-1,isOpera=navigator.userAgent.toLowerCase().indexOf('opera')>-1,isIe=navigator.userAgent.toLowerCase().indexOf('msie')>-1;if((isWebkit||isOpera||isIe)&&document.getElementById&&window.addEventListener){window.addEventListener('hashchange',function(){var id=location.hash.substring(1),element;if(!(/^[A-z0-9_-]+$/.test(id))){return;}
element=document.getElementById(id);if(element){if(!(/^(?:a|select|input|button|textarea)$/i.test(element.tagName))){element.tabIndex=-1;}
element.focus();}},false);}})();